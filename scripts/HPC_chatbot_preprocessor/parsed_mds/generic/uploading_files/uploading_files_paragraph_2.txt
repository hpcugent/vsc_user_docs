More advanced editors (beyond the scope of this page) are vim and
emacs. A simple tutorial on how to get started with vim can be found
at https://www.openvim.com/.
Copying faster with rsync
[//]: # (sec:rsync)
rsync is a fast and versatile copying tool. It can be much faster than
scp when copying large datasets. It's famous for its "delta-transfer
algorithm", which reduces the amount of data sent over the network by
only sending the differences between files.
You will need to run rsync from a computer where it is installed.
Installing rsync is the easiest on Linux: it comes pre-installed with
a lot of distributions.
For example, to copy a folder with lots of CSV files:
$ rsync -rzv testfolder vsc40000@login.hpc.ugent.be:data/
will copy the folder testfolder and its contents to $VSC_DATA on the
, assuming the data symlink is present in your home directory, see 
symlinks section.
The -r flag means "recursively", the -z flag means that compression
is enabled (this is especially handy when dealing with CSV files because
they compress well) and the -v enables more verbosity (more details
about what's going on).
To copy large files using rsync, you can use the -P flag: it enables
both showing of progress and resuming partially downloaded files.
To copy files to your local computer, you can also use rsync:
$ rsync -rzv vsc40000@login.hpc.ugent.be:data/bioset local_folder
This will copy the folder bioset and its contents on $VSC_DATA
to a local folder named local_folder.
See man rsync or https://linux.die.net/man/1/rsync for more
information about rsync.
Exercises
1.  Download the file /etc/hostname to your local computer.
2.  Upload a file to a subdirectory of your personal $VSC_DATA space.
3.  Create a file named hello.txt and edit it using nano.
Now you have a basic understanding, see next chapter for some more in depth concepts.